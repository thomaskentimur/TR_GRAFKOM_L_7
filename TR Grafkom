#include<windows.h>
#include<GL/glut.h>
#include<stdlib.h>
#include<math.h>

const double PI = 3.141592653589793;
int i;

void init(void);
void tampil(void);
void mouse(int button, int state, int x, int y);
void keyboard(unsigned char, int, int);
void ukuran(int, int);
void mouseMotion(int x, int y);

float xrot = 0.0f;
float yrot = 0.0f;
float xdiff = 0.0f;
float ydiff = 0.0f;
bool mouseDown = false;
int is_depth;

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(800, 600);
    glutInitWindowPosition(250, 80);
    glutCreateWindow("TR_Stadion");
    init();
    glutDisplayFunc(tampil);
    glutReshapeFunc(ukuran);

    glutKeyboardFunc(keyboard);
    glutMouseFunc(mouse);
    glutMotionFunc(mouseMotion);

    glutIdleFunc(tampil);
    glutMainLoop();
    return 0;
}
void init(void)
{
    glClearColor(0.0, 0.0, 0.0, 0.0);
    GLfloat light_position0[] = { 100.0,100.0,-350.0,0.0 };
    glLightfv(GL_LIGHT0, GL_POSITION, light_position0);
    glMatrixMode(GL_PROJECTION);
    glEnable(GL_LIGHTING);
    glEnable(GL_COLOR_MATERIAL);
    glEnable(GL_LIGHT0);
    glEnable(GL_DEPTH_TEST);
    is_depth = 1;
    glMatrixMode(GL_MODELVIEW);
    glPointSize(9.0);
    glLineWidth(6.0f);
}
void lapangan()//suko
{
    //lapangan
    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.0, 1.0, 0.0);
    glVertex3f(15, -10.0, -30.0);
    glVertex3f(20, -10.0, -30.0);
    glVertex3f(20, -10.0, 30.1);
    glVertex3f(15, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.1, 0.5, 0.0);
    glVertex3f(15, -10.0, -30.0);
    glVertex3f(10, -10.0, -30.0);
    glVertex3f(10, -10.0, 30.1);
    glVertex3f(15, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.0, 1.0, 0.0);
    glVertex3f(5, -10.0, -30.0);
    glVertex3f(10, -10.0, -30.0);
    glVertex3f(10, -10.0, 30.1);
    glVertex3f(5, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.1, 0.5, 0.0);
    glVertex3f(5, -10.0, -30.0);
    glVertex3f(-0, -10.0, -30.0);
    glVertex3f(-0, -10.0, 30.1);
    glVertex3f(5, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.0, 1.0, 0.0);
    glVertex3f(0, -10.0, -30.0);
    glVertex3f(-5, -10.0, -30.0);
    glVertex3f(-5, -10.0, 30.1);
    glVertex3f(0, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.1, 0.5, 0.0);
    glVertex3f(-5, -10.0, -30.0);
    glVertex3f(-10, -10.0, -30.0);
    glVertex3f(-10, -10.0, 30.1);
    glVertex3f(-5, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.0, 1.0, 0.0);
    glVertex3f(-10, -10.0, -30.0);
    glVertex3f(-15, -10.0, -30.0);
    glVertex3f(-15, -10.0, 30.1);
    glVertex3f(-10, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.1, 0.5, 0.0);
    glVertex3f(-15, -10.0, -30.0);
    glVertex3f(-20, -10.0, -30.0);
    glVertex3f(-20, -10.0, 30.1);
    glVertex3f(-15, -10.0, 30.1);
    glEnd();
    glPopMatrix();
}
void tribunbelakang(void)//tombel
{
double ymax = 5.0;double y2max = 20.0;
double y=-8.0;double z=-41.1;double x1= -20.5;double x2=25.51;//lt1
double y2=5.0;double z2=z-8;double x5=x2+8;//lt2
while (y<=ymax)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(19, 92, 189);
    glVertex3f(x1,y,z);
    glVertex3f(x2,y,z);
    glVertex3f(x2,y+0.8,z);
    glVertex3f(x1,y+0.8,z);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(77, 144, 232);
    glVertex3f(x1,y,z+0.5);
    glVertex3f(x2,y,z+0.5);
    glVertex3f(x2,y,z);
    glVertex3f(x1,y,z);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x1,y,z);
    glVertex3f(x2,y,z);
    glVertex3f(x2,y-0.8,z);
    glVertex3f(x1,y-0.8,z);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x1,y-0.8,z+1);
    glVertex3f(x2,y-0.8,z+1);
    glVertex3f(x2,y-0.8,z);
    glVertex3f(x1,y-0.8,z);
    glEnd();
    y++;z--;x2++;
}
while (y2<=y2max)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(148, 30, 18);
    glVertex3f(x1,y2,z2);
    glVertex3f(x5,y2,z2);
    glVertex3f(x5,y2+0.8,z2);
    glVertex3f(x1,y2+0.8,z2);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(219, 59, 42);
    glVertex3f(x1,y2,z2+0.5);
    glVertex3f(x5,y2,z2+0.5);
    glVertex3f(x5,y2,z2);
    glVertex3f(x1,y2,z2);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x1,y2,z2);
    glVertex3f(x5,y2,z2);
    glVertex3f(x5,y2-0.8,z2);
    glVertex3f(x1,y2-0.8,z2);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x1,y2-0.8,z2+1);
    glVertex3f(x5,y2-0.8,z2+1);
    glVertex3f(x5,y2-0.8,z2);
    glVertex3f(x1,y2-0.8,z2);
    glEnd();
    y2++;z2--;x5++;
}
}
void tribunkanan(void)
{
double ymax = 5.0;double y2max = 20.0;
double y=-8.0; double x=25.51; double z1=-41.1; double z2=38.01;//lt1
double y2=5.0;double x2=x+8;double z4= z1-8;double z5=z2+8;//lt2
while (y<=ymax)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(19, 92, 189);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x,y+0.8,z2);
    glVertex3f(x,y+0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(77, 144, 232);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x-0.5,y,z2);
    glVertex3f(x-0.5,y,z1);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x,y-0.8,z2);
    glVertex3f(x,y-0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x-1,y-0.8,z1);
    glVertex3f(x-1,y-0.8,z2);
    glVertex3f(x,y-0.8,z2);
    glVertex3f(x,y-0.8,z1);
    glEnd();
    x++;y++;z1--;z2++;
}
while (y2<=y2max)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(148, 30, 18);
    glVertex3f(x2,y2,z4);
    glVertex3f(x2,y2,z5);
    glVertex3f(x2,y2+0.8,z5);
    glVertex3f(x2,y2+0.8,z4);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(219, 59, 42);
    glVertex3f(x2,y2,z4);
    glVertex3f(x2,y2,z5);
    glVertex3f(x2-0.5,y2,z5);
    glVertex3f(x2-0.5,y2,z4);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x2,y2,z4);
    glVertex3f(x2,y2,z5);
    glVertex3f(x2,y2-0.8,z5);
    glVertex3f(x2,y2-0.8,z4);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x2-1,y2-0.8,z4);
    glVertex3f(x2-1,y2-0.8,z5);
    glVertex3f(x2,y2-0.8,z5);
    glVertex3f(x2,y2-0.8,z4);
    glEnd();
    x2++;y2++;z4--;z5++;
}
    }
void tribunkiri()
{
double ymax = 5.0; double y2max = 20.0;
double y=-8.0; double x=-25.51; double z1=32.51; double z2=-32.51;
double y2=5.0;double x2=x-8;
while (y<=ymax)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(19, 92, 189);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x,y+0.8,z2);
    glVertex3f(x,y+0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(77, 144, 232);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x+0.5,y,z2);
    glVertex3f(x+0.5,y,z1);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x,y-0.8,z2);
    glVertex3f(x,y-0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x+1,y-0.8,z1);
    glVertex3f(x+1,y-0.8,z2);
    glVertex3f(x,y-0.8,z2);
    glVertex3f(x,y-0.8,z1);
    glEnd();
    x--;y++;
}
while (y2<=y2max)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(148, 30, 18);
    glVertex3f(x2,y2,z1);
    glVertex3f(x2,y2,z2);
    glVertex3f(x2,y2+0.8,z2);
    glVertex3f(x2,y2+0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(219, 59, 42);
    glVertex3f(x2,y2,z1);
    glVertex3f(x2,y2,z2);
    glVertex3f(x2+0.5,y2,z2);
    glVertex3f(x2+0.5,y2,z1);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x2,y2,z1);
    glVertex3f(x2,y2,z2);
    glVertex3f(x2,y2-0.8,z2);
    glVertex3f(x2,y2-0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x2+1,y2-0.8,z1);
    glVertex3f(x2+1,y2-0.8,z2);
    glVertex3f(x2,y2-0.8,z2);
    glVertex3f(x2,y2-0.8,z1);
    glEnd();
    x2--;y2++;
}
}
void tribundepan()
{
double ymax = 5.0;double y2max = 20.0;
double y=-8.0;double z=38.01;double x1=-20.01;double x2=25.51;//lt1
double y2=5.0;double z2=z+8;double x4= x1-16;double x5=x2+8;//lt2
while (y<=ymax)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(19, 92, 189);
    glVertex3f(x1,y,z);
    glVertex3f(x2,y,z);
    glVertex3f(x2,y+0.8,z);
    glVertex3f(x1,y+0.8,z);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(77, 144, 232);
    glVertex3f(x1,y,z-0.5);
    glVertex3f(x2,y,z-0.5);
    glVertex3f(x2,y,z);
    glVertex3f(x1,y,z);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x1,y,z);
    glVertex3f(x2,y,z);
    glVertex3f(x2,y-0.8,z);
    glVertex3f(x1,y-0.8,z);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x1,y-0.8,z-1);
    glVertex3f(x2,y-0.8,z-1);
    glVertex3f(x2,y-0.8,z);
    glVertex3f(x1,y-0.8,z);
    glEnd();
    y++;z++;x2++;
}
while (y2<=y2max)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(148, 30, 18);
    glVertex3f(x1,y2,z2);
    glVertex3f(x5,y2,z2);
    glVertex3f(x5,y2+0.8,z2);
    glVertex3f(x1,y2+0.8,z2);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(219, 59, 42);
    glVertex3f(x1,y2,z2-0.5);
    glVertex3f(x5,y2,z2-0.5);
    glVertex3f(x5,y2,z2);
    glVertex3f(x1,y2,z2);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x1,y2,z2);
    glVertex3f(x5,y2,z2);
    glVertex3f(x5,y2-0.8,z2);
    glVertex3f(x1,y2-0.8,z2);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x1,y2-0.8,z2-1);
    glVertex3f(x5,y2-0.8,z2-1);
    glVertex3f(x5,y2-0.8,z2);
    glVertex3f(x1,y2-0.8,z2);
    glEnd();
    y2++;z2++;x5++;
}
}
void tampil(void)
{
    glPushMatrix();
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    gluLookAt(0.0f, 0.0f, 3.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f);
    glRotatef(xrot, 0, 1, 0);
    glRotatef(yrot, 1, 0, 0);
    lapangan();
    tribunbelakang();tribundepan();tribunkanan();tribunkiri();
    glPopMatrix();
    glutSwapBuffers();
} 
void keyboard(unsigned char key, int x, int y)
{
    switch (key)
    {
    case 'w':
    case 'W':
        glTranslatef(0.0, 0.0, 3.0);
        break;
    case 'd':
    case 'D':
        glTranslatef(-3.0, 0.0, 0.0);
        break;
	case 's':
    case 'S':
        glTranslatef(0.0, 0.0, -3.0);
        break;
    case 'a':
    case 'A':
        glTranslatef(3.0, 0.0, 0.0);
        break;

	case '7':
        glTranslatef(0.0, 3.0, 0.0);
        break;
	case '9':
        glTranslatef(0.0, -3.0, 0.0);
        break;
    case '2':
        glRotatef(2.0, 1.0, 0.0, 0.0);
        break;
    case '8':
        glRotatef(-2.0, 1.0, 0.0, 0.0);
        break;
    case '6'://putar kanan
        glRotatef(2.0, 0.0, 1.0, 0.0);
        break;
    case '4'://putar kiri
        glRotatef(-2.0, 0.0, 1.0, 0.0);
        break;
    case '1':
        glRotatef(2.0, 0.0, 0.0, 1.0);
        break;
    case '3':
        glRotatef(-2.0, 0.0, 0.0, 1.0);
        break;
    case '5':
        if (is_depth)
        {
            is_depth = 0;
            glDisable(GL_DEPTH_TEST);
        }
        else
        {
            is_depth = 1;
            glEnable(GL_DEPTH_TEST);
        }
    }
    tampil();

}

void mouse(int button, int state, int x, int y)
{
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
    {
        mouseDown = true;
        xdiff = xrot = x;
        ydiff = yrot = y;
    }
    else {
        mouseDown = false;
    }
}

void mouseMotion(int x, int y)
{
    if (mouseDown)
    {
        xrot = x;
        yrot = y;

        glutPostRedisplay();
    }
}

void ukuran(int lebar, int tinggi)
{
    if (tinggi == 0) tinggi = 1;

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(90.0, lebar / tinggi, 5.0, 500.0);
    glTranslatef(0.0, -5.0, -150.0);
    glMatrixMode(GL_MODELVIEW);
}
