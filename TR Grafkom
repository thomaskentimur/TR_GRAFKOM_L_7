#include<windows.h>
#include<GL/glut.h>
#include<stdlib.h>
#include<math.h>

const double PI = 3.141592653589793;
int i;

void init(void);
void tampil(void);
void mouse(int button, int state, int x, int y);
void keyboard(unsigned char, int, int);
void ukuran(int, int);
void mouseMotion(int x, int y);

float xrot = 0.0f;
float yrot = 0.0f;
float xdiff = 0.0f;
float ydiff = 0.0f;
bool mouseDown = false;
int is_depth;

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(800, 600);
    glutInitWindowPosition(250, 80);
    glutCreateWindow("TR_Stadion");
    init();
    glutDisplayFunc(tampil);
    glutReshapeFunc(ukuran);

    glutKeyboardFunc(keyboard);
    glutMouseFunc(mouse);
    glutMotionFunc(mouseMotion);

    glutIdleFunc(tampil);
    glutMainLoop();
    return 0;
}
void init(void)
{
    glClearColor(0.0, 0.0, 0.0, 0.0);
    GLfloat light_position0[] = { 100.0,100.0,-350.0,0.0 };
    glLightfv(GL_LIGHT0, GL_POSITION, light_position0);
    glMatrixMode(GL_PROJECTION);
    glEnable(GL_LIGHTING);
    glEnable(GL_COLOR_MATERIAL);
    glEnable(GL_LIGHT0);
    glEnable(GL_DEPTH_TEST);
    is_depth = 1;
    glMatrixMode(GL_MODELVIEW);
    glPointSize(9.0);
    glLineWidth(6.0f);
}
void lapangan()//suko
{
    //lapangan
    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.0, 1.0, 0.0);
    glVertex3f(15, -10.0, -30.0);
    glVertex3f(20, -10.0, -30.0);
    glVertex3f(20, -10.0, 30.1);
    glVertex3f(15, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.1, 0.5, 0.0);
    glVertex3f(15, -10.0, -30.0);
    glVertex3f(10, -10.0, -30.0);
    glVertex3f(10, -10.0, 30.1);
    glVertex3f(15, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.0, 1.0, 0.0);
    glVertex3f(5, -10.0, -30.0);
    glVertex3f(10, -10.0, -30.0);
    glVertex3f(10, -10.0, 30.1);
    glVertex3f(5, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.1, 0.5, 0.0);
    glVertex3f(5, -10.0, -30.0);
    glVertex3f(-0, -10.0, -30.0);
    glVertex3f(-0, -10.0, 30.1);
    glVertex3f(5, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.0, 1.0, 0.0);
    glVertex3f(0, -10.0, -30.0);
    glVertex3f(-5, -10.0, -30.0);
    glVertex3f(-5, -10.0, 30.1);
    glVertex3f(0, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.1, 0.5, 0.0);
    glVertex3f(-5, -10.0, -30.0);
    glVertex3f(-10, -10.0, -30.0);
    glVertex3f(-10, -10.0, 30.1);
    glVertex3f(-5, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.0, 1.0, 0.0);
    glVertex3f(-10, -10.0, -30.0);
    glVertex3f(-15, -10.0, -30.0);
    glVertex3f(-15, -10.0, 30.1);
    glVertex3f(-10, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3f(0.1, 0.5, 0.0);
    glVertex3f(-15, -10.0, -30.0);
    glVertex3f(-20, -10.0, -30.0);
    glVertex3f(-20, -10.0, 30.1);
    glVertex3f(-15, -10.0, 30.1);
    glEnd();
    glPopMatrix();
}
void tribunbelakang(void)//tombel
{
double ymax = 5.0;double y2max = 20.0;
double y=-8.0;double z=-41.1;double x1= -20.5;double x2=25.51;//lt1
double y2=5.0;double z2=z-8;double x5=x2+8;//lt2
while (y<=ymax)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(19, 92, 189);
    glVertex3f(x1,y,z);
    glVertex3f(x2,y,z);
    glVertex3f(x2,y+0.8,z);
    glVertex3f(x1,y+0.8,z);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(77, 144, 232);
    glVertex3f(x1,y,z+0.5);
    glVertex3f(x2,y,z+0.5);
    glVertex3f(x2,y,z);
    glVertex3f(x1,y,z);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x1,y,z);
    glVertex3f(x2,y,z);
    glVertex3f(x2,y-0.8,z);
    glVertex3f(x1,y-0.8,z);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x1,y-0.8,z+1);
    glVertex3f(x2,y-0.8,z+1);
    glVertex3f(x2,y-0.8,z);
    glVertex3f(x1,y-0.8,z);
    glEnd();
    y++;z--;x2++;
}
while (y2<=y2max)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(148, 30, 18);
    glVertex3f(x1,y2,z2);
    glVertex3f(x5,y2,z2);
    glVertex3f(x5,y2+0.8,z2);
    glVertex3f(x1,y2+0.8,z2);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(219, 59, 42);
    glVertex3f(x1,y2,z2+0.5);
    glVertex3f(x5,y2,z2+0.5);
    glVertex3f(x5,y2,z2);
    glVertex3f(x1,y2,z2);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x1,y2,z2);
    glVertex3f(x5,y2,z2);
    glVertex3f(x5,y2-0.8,z2);
    glVertex3f(x1,y2-0.8,z2);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x1,y2-0.8,z2+1);
    glVertex3f(x5,y2-0.8,z2+1);
    glVertex3f(x5,y2-0.8,z2);
    glVertex3f(x1,y2-0.8,z2);
    glEnd();
    y2++;z2--;x5++;
}
}
void tribunkanan(void)
{
double ymax = 5.0;double y2max = 20.0;
double y=-8.0; double x=25.51; double z1=-41.1; double z2=38.01;//lt1
double y2=5.0;double x2=x+8;double z4= z1-8;double z5=z2+8;//lt2
while (y<=ymax)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(19, 92, 189);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x,y+0.8,z2);
    glVertex3f(x,y+0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(77, 144, 232);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x-0.5,y,z2);
    glVertex3f(x-0.5,y,z1);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x,y-0.8,z2);
    glVertex3f(x,y-0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x-1,y-0.8,z1);
    glVertex3f(x-1,y-0.8,z2);
    glVertex3f(x,y-0.8,z2);
    glVertex3f(x,y-0.8,z1);
    glEnd();
    x++;y++;z1--;z2++;
}
while (y2<=y2max)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(148, 30, 18);
    glVertex3f(x2,y2,z4);
    glVertex3f(x2,y2,z5);
    glVertex3f(x2,y2+0.8,z5);
    glVertex3f(x2,y2+0.8,z4);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(219, 59, 42);
    glVertex3f(x2,y2,z4);
    glVertex3f(x2,y2,z5);
    glVertex3f(x2-0.5,y2,z5);
    glVertex3f(x2-0.5,y2,z4);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x2,y2,z4);
    glVertex3f(x2,y2,z5);
    glVertex3f(x2,y2-0.8,z5);
    glVertex3f(x2,y2-0.8,z4);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x2-1,y2-0.8,z4);
    glVertex3f(x2-1,y2-0.8,z5);
    glVertex3f(x2,y2-0.8,z5);
    glVertex3f(x2,y2-0.8,z4);
    glEnd();
    x2++;y2++;z4--;z5++;
}
    }
void tribunkiri()
{
double ymax = 5.0; double y2max = 20.0;
double y=-8.0; double x=-25.51; double z1=32.51; double z2=-32.51;
double y2=5.0;double x2=x-8;
while (y<=ymax)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(19, 92, 189);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x,y+0.8,z2);
    glVertex3f(x,y+0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(77, 144, 232);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x+0.5,y,z2);
    glVertex3f(x+0.5,y,z1);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x,y,z1);
    glVertex3f(x,y,z2);
    glVertex3f(x,y-0.8,z2);
    glVertex3f(x,y-0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x+1,y-0.8,z1);
    glVertex3f(x+1,y-0.8,z2);
    glVertex3f(x,y-0.8,z2);
    glVertex3f(x,y-0.8,z1);
    glEnd();
    x--;y++;
}
while (y2<=y2max)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(148, 30, 18);
    glVertex3f(x2,y2,z1);
    glVertex3f(x2,y2,z2);
    glVertex3f(x2,y2+0.8,z2);
    glVertex3f(x2,y2+0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(219, 59, 42);
    glVertex3f(x2,y2,z1);
    glVertex3f(x2,y2,z2);
    glVertex3f(x2+0.5,y2,z2);
    glVertex3f(x2+0.5,y2,z1);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x2,y2,z1);
    glVertex3f(x2,y2,z2);
    glVertex3f(x2,y2-0.8,z2);
    glVertex3f(x2,y2-0.8,z1);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x2+1,y2-0.8,z1);
    glVertex3f(x2+1,y2-0.8,z2);
    glVertex3f(x2,y2-0.8,z2);
    glVertex3f(x2,y2-0.8,z1);
    glEnd();
    x2--;y2++;
}
}
void tribundepan()
{
double ymax = 5.0;double y2max = 20.0;
double y=-8.0;double z=38.01;double x1=-20.01;double x2=25.51;//lt1
double y2=5.0;double z2=z+8;double x4= x1-16;double x5=x2+8;//lt2
while (y<=ymax)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(19, 92, 189);
    glVertex3f(x1,y,z);
    glVertex3f(x2,y,z);
    glVertex3f(x2,y+0.8,z);
    glVertex3f(x1,y+0.8,z);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(77, 144, 232);
    glVertex3f(x1,y,z-0.5);
    glVertex3f(x2,y,z-0.5);
    glVertex3f(x2,y,z);
    glVertex3f(x1,y,z);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x1,y,z);
    glVertex3f(x2,y,z);
    glVertex3f(x2,y-0.8,z);
    glVertex3f(x1,y-0.8,z);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x1,y-0.8,z-1);
    glVertex3f(x2,y-0.8,z-1);
    glVertex3f(x2,y-0.8,z);
    glVertex3f(x1,y-0.8,z);
    glEnd();
    y++;z++;x2++;
}
while (y2<=y2max)
{
    glBegin(GL_POLYGON);//senderan
    glColor3ub(148, 30, 18);
    glVertex3f(x1,y2,z2);
    glVertex3f(x5,y2,z2);
    glVertex3f(x5,y2+0.8,z2);
    glVertex3f(x1,y2+0.8,z2);
    glEnd();
    glBegin(GL_POLYGON);//dudukan
    glColor3ub(219, 59, 42);
    glVertex3f(x1,y2,z2-0.5);
    glVertex3f(x5,y2,z2-0.5);
    glVertex3f(x5,y2,z2);
    glVertex3f(x1,y2,z2);
    glEnd();
    glBegin(GL_POLYGON);//bawah bangku
    glColor3ub(82, 82, 82);
    glVertex3f(x1,y2,z2);
    glVertex3f(x5,y2,z2);
    glVertex3f(x5,y2-0.8,z2);
    glVertex3f(x1,y2-0.8,z2);
    glEnd();
    glBegin(GL_POLYGON);//alas
    glColor3ub(125, 125, 125);
    glVertex3f(x1,y2-0.8,z2-1);
    glVertex3f(x5,y2-0.8,z2-1);
    glVertex3f(x5,y2-0.8,z2);
    glVertex3f(x1,y2-0.8,z2);
    glEnd();
    y2++;z2++;x5++;
}
}
void dlapangan(void)//suko
{
    //pinggir lapangan

    glLineWidth(5.0f);
    glPushMatrix();
    glBegin(GL_LINE_LOOP);
    glColor3f(1.0, 1.0, 1.0);
    glVertex3f(17, -10.0, -27.0);
    glVertex3f(17, -10.0, 27.1);
    glVertex3f(-17, -10.0, 27.0);
    glVertex3f(-17, -10.0, -27.1);
    glEnd();
    glBegin(GL_LINE_STRIP);
    glColor3f(1.0, 1.0, 1.0);
    glVertex3f(17, -10.0, 0);
    glVertex3f(-17, -10.0, 0);
    glEnd();

    //garis gawang
    glBegin(GL_LINE_STRIP);
    glColor3f(1.0, 1.0, 1.0);
    glVertex3f(10, -10.0, -27.0);
    glVertex3f(10, -10.0, -20.0);
    glVertex3f(-10, -10.0, -20.0);
    glVertex3f(-10, -10.0, -27.0);
    glEnd();
    glBegin(GL_LINE_STRIP);
    glColor3f(1.0, 1.0, 1.0);
    glVertex3f(10, -10.0, 27.0);
    glVertex3f(10, -10.0, 20.0);
    glVertex3f(-10, -10.0, 20.0);
    glVertex3f(-10, -10.0, 27.0);
    glEnd();

    //gawang
    glBegin(GL_LINE_STRIP);
    glColor3f(1.0, 1.0, 1.0);
    glVertex3f(4, -10.0, -27.0);
    glVertex3f(4, -6.0, -27.0);
    glVertex3f(-4, -6.0, -27.0);
    glVertex3f(-4, -10.0, -27.0);
    glEnd();
    glBegin(GL_LINE_STRIP);
    glColor3f(1.0, 1.0, 1.0);
    glVertex3f(4, -10.0, 27.0);
    glVertex3f(4, -6.0,27.0);
    glVertex3f(-4, -6.0, 27.0);
    glVertex3f(-4, -10.0, 27.0);
    glEnd();

    //garis_luar_lapangan
    glBegin(GL_POLYGON);
    glColor3ub(217, 83, 78);
    glVertex3f(25, -10.0, -30.0);
    glVertex3f(20, -10.0, -30.0);
    glVertex3f(20, -10.0, 30.1);
    glVertex3f(25, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3ub(217, 83, 78);
    glVertex3f(25, -10.0, 38.0);
    glVertex3f(-20, -10.0, 38.0);
    glVertex3f(-20, -10.0, 30.1);
    glVertex3f(25, -10.0, 30.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3ub(217, 83, 78);
    glVertex3f(25, -10.0, -30.0);
    glVertex3f(-20, -10.0, -30.0);
    glVertex3f(-20, -10.0, -40.1);
    glVertex3f(25, -10.0, -40.1);
    glEnd();

    glPushMatrix();
    glBegin(GL_POLYGON);
    glColor3ub(217, 83, 78);
    glVertex3f(25, -10.0, -10.0);
    glVertex3f(20, -10.0, -10.0);
    glVertex3f(20, -10.0, -30.1);
    glVertex3f(25, -10.0, -30.1);
    glEnd();

      glBegin(GL_POLYGON);
    glColor3ub(217, 83, 78);
    glVertex3f(-20, -10.0, -40.1);
    glVertex3f(-25, -10.0, -40.1);
    glVertex3f(-25, -10.0, 38.0);
    glVertex3f(-20, -10.0, 38.0);
    glEnd();

    //tepi lapangan depan
    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-20, -10.0, 37.0);
    glVertex3f(20, -10.0, 37.0);
    glVertex3f(20, -5.0, 37.0);
    glVertex3f(-20, -5.0, 37.0);
    glEnd();
    //tepi lapangan belakang
    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-20, -10.0, -40.1);
    glVertex3f(20, -10.0, -40.1);
    glVertex3f(20, -5.0, -40.1);
    glVertex3f(-20, -5.0, -40.1);
    glEnd();

    //tepi lapangan samping kanan
    glBegin(GL_POLYGON);
    glColor3ub(255,255,255);
    glVertex3f(24.5, -10.0, 30.0);
    glVertex3f(24.5, -5.0, 30.0);
    glVertex3f(24.5, -5.0, -30.1);
    glVertex3f(24.5, -10.0, -30.1);
    glEnd();

      //tepi lapangan samping kiri
    glBegin(GL_POLYGON);
    glColor3ub(255,255,255);
    glVertex3f(-24.5, -10.0, 30.0);
    glVertex3f(-24.5, -5.0, 30.0);
    glVertex3f(-24.5, -5.0, -30.1);
    glVertex3f(-24.5, -10.0, -30.1);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(0,0, 0);
    glVertex3f(-24.4, -10.0, 2.5);
    glVertex3f(-24.4, -5.0, 2.5);
    glVertex3f(-24.4, -5.0, -2.5);
    glVertex3f(-24.4, -10.0, -2.5);
    glEnd();

    //lengkukan kiri
    glBegin(GL_POLYGON);
    glColor3ub(255,255,255);
    glVertex3f(-20, -10.0, 37.0);
    glVertex3f(-20, -5.0, 37.0);
    glVertex3f(-22.5, -5.0, 36.0);
    glVertex3f(-23, -5.0, 35.5);
    glVertex3f(-24, -5.0, 34.5);
    glVertex3f(-24.5, -5.0, 30.0);
    glVertex3f(-24.5, -10.0, 30.0);
    glVertex3f(-24, -10.0, 34.5);
     glVertex3f(-23, -5.0, 35.5);
    glVertex3f(-22.5, -5.0, 36.0);
    glEnd();

    //lengkukan kanan

    glBegin(GL_POLYGON);
    glColor3ub(255,255,255);
    glVertex3f(20, -10.0, 37.0);
    glVertex3f(20, -5.0, 37.0);
    glVertex3f(22.5, -5.0, 36.0);
    glVertex3f(23, -5.0, 35.5);
    glVertex3f(24, -5.0, 34.5);
    glVertex3f(24.5, -5.0, 30.0);
    glVertex3f(24.5, -10.0, 30.0);
    glVertex3f(24, -10.0, 34.5);
     glVertex3f(23, -5.0, 35.5);
    glVertex3f(22.5, -5.0, 36.0);
    glEnd();

      //lengkukan kanan belakang
    glBegin(GL_POLYGON);
    glColor3ub(255,255,255);
    glVertex3f(24.5, -10.0, -30.0);
    glVertex3f(24.5, -5.0, -30.0);
    glVertex3f(24.5, -5.0, -34.0);
    glVertex3f(24, -5.0, -35.0);
    glVertex3f(23, -5.0, -36.0);
    glVertex3f(22, -5.0, -37.0);
    glVertex3f(20, -5.0, -40.1);
    glVertex3f(20, -10.0, -40.1);
    glVertex3f(22, -10.0, -37.0);
    glVertex3f(23, -10.0, -36.0);
    glVertex3f(24, -10.0, -35.0);
    glVertex3f(24.5, -10.0, -34.0);
    glEnd();

    //lengkukan kiri belakang
    glBegin(GL_POLYGON);
    glColor3ub(255,255,255);
    glVertex3f(-20, -10.0, -40.1);
    glVertex3f(-20, -5.0, -40.1);
    glVertex3f(-22.5, -5.0, -35.0);
    glVertex3f(-23, -5.0, -34.0);
    glVertex3f(-24, -5.0, -32.0);
    glVertex3f(-24.5, -5.0, -30.0);
    glVertex3f(-24.5, -10.0, -30.0);
    glVertex3f(-24, -10.0, -32.0);
    glVertex3f(-23, -5.0, -34.0);
    glVertex3f(-22.5, -5.0, -35.0);
    glEnd();
}

void dtribun(void)//alen
{
    //kiri
    glBegin(GL_POLYGON);
    glColor3ub(222, 222, 222);
    glVertex3f(-49,21.5,32.51);
    glVertex3f(-49,-8,32.51);
    glVertex3f(-25.51,-8,32.51);
    glVertex3f(-25.51,-2,32.51);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(222, 222, 222);
    glVertex3f(-49,21.5,-32.51);
    glVertex3f(-49,-8,-32.51);
    glVertex3f(-25.51,-8,-32.51);
    glVertex3f(-25.51,-2,-32.51);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(222, 222, 222);
    glVertex3f(-49,23,-32.51);
    glVertex3f(-49,23,32.51);
    glVertex3f(-49,-8,32.51);
    glVertex3f(-49,-8,-32.51);
    glEnd();
    //depan
    glBegin(GL_POLYGON);
    glColor3ub(222, 222, 222);
    glVertex3f(-20,-8,38.01);
    glVertex3f(-20,-8,61.51);
    glVertex3f(-20,22,61.51);
    glVertex3f(-20,-2,38.01);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(222, 222, 222);
    glVertex3f(-20,-8,61.51);
    glVertex3f(-20,22,61.51);
    glVertex3f(49,22,61.51);
    glVertex3f(49,-8,61.51);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(222, 222, 222);
    glVertex3f(49,-8,61.51);
    glVertex3f(49,22,61.51);
    glVertex3f(49,22,-64.0);
    glVertex3f(49,-8,-64.0);
    glEnd();
    //blkg
    glBegin(GL_POLYGON);
    glColor3ub(222, 222, 222);
    glVertex3f(-20.5,-8,-39.1);
    glVertex3f(-20.5,-8,-64.0);
    glVertex3f(-20.5,22,-64.0);
    glVertex3f(-20.5,-2,-39.1);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(222, 222, 222);
    glVertex3f(-20.5,-8,-64.0);
    glVertex3f(-20.5,22,-64.0);
    glVertex3f(49,22,-64.0);
    glVertex3f(49,-8,-64.0);
    glEnd();
    //alas
    glBegin(GL_POLYGON);
    glColor3ub(112, 110, 110);
    glVertex3f(80,-11,-100.0);
    glVertex3f(80,-11,100.0);
    glVertex3f(-80,-11,100.0);
    glVertex3f(-80,-11,-100.0);
    glEnd();
    //kanopi
    glBegin(GL_POLYGON);
    glColor3ub(222, 222, 222);
    glVertex3f(-49,23,32.51);
    glVertex3f(-30,23,32.51);
    glVertex3f(-30,23,-32.51);
    glVertex3f(-49,23,-32.51);
    glEnd();

    //papan score
    glBegin(GL_POLYGON);
    glColor3ub(84, 84, 84);
    glVertex3f(-30,23,-5);
    glVertex3f(-30,23,5);
    glVertex3f(-30,20,5);
    glVertex3f(-30,20,-5);
    glEnd();

    //luar
    glBegin(GL_POLYGON);//dpn
    glColor3ub(229, 230, 211);
    glVertex3f(-20,-8,64.51);
    glVertex3f(-20,22,64.51);
    glVertex3f(50,22,64.51);
    glVertex3f(50,-8,64.51);
    glEnd();
    glBegin(GL_POLYGON);//kanan
    glColor3ub(229, 230, 211);
    glVertex3f(52,-8,62.51);
    glVertex3f(52,22,62.51);
    glVertex3f(52,22,-64.51);
    glVertex3f(52,-8,-64.51);
    glEnd();
    glBegin(GL_POLYGON);//blkg
    glColor3ub(229, 230, 211);
    glVertex3f(-20.5,-8,-66.0);
    glVertex3f(-20.5,22,-66.0);
    glVertex3f(50,22,-66.0);
    glVertex3f(50,-8,-66.0);
    glEnd();
    glBegin(GL_POLYGON);//pinggir1
    glColor3ub(255, 230, 211);
    glVertex3f(50,-8,64.51);
    glVertex3f(50,22,64.51);
    glVertex3f(51.5,22,64);
    glVertex3f(51.5,-8,64);
    glEnd();
    glBegin(GL_POLYGON);//pinggir2
    glColor3ub(255, 230, 211);
    glVertex3f(51.5,-8,64);
    glVertex3f(51.5,22,64);
    glVertex3f(52,22,62.51);
    glVertex3f(52,-8,62.51);
    glEnd();
    glBegin(GL_POLYGON);//pinggir1b
    glColor3ub(255, 230, 211);
    glVertex3f(50,-8,-66);
    glVertex3f(50,22,-66);
    glVertex3f(51.5,22,-65.51);
    glVertex3f(51.5,-8,-65.51);
    glEnd();
    glBegin(GL_POLYGON);//pinggir2b
    glColor3ub(255, 230, 211);
    glVertex3f(51.5,-8,-65.51);
    glVertex3f(51.5,22,-65.51);
    glVertex3f(52,22,-64.51);
    glVertex3f(52,-8,-64.51);
    glEnd();

    //tepi luar
    glBegin(GL_POLYGON);//d
    glColor3ub(222, 222, 222);
    glVertex3f(-20,-8,61.51);
    glVertex3f(-20,22,61.51);
    glColor3ub(229, 230, 211);
    glVertex3f(-20,22,64.51);
    glVertex3f(-20,-8,64.51);
    glEnd();
    glBegin(GL_POLYGON);//b
    glColor3ub(222, 222, 222);
    glVertex3f(-20,-8,-61.51);
    glVertex3f(-20,22,-61.51);
    glColor3ub(229, 230, 211);
    glVertex3f(-20,22,-64.51);
    glVertex3f(-20,-8,-64.51);
    glEnd();
    glBegin(GL_POLYGON);//ad
    glColor3ub(100, 147, 250);
    glVertex3f(-20,22,61.51);
    glVertex3f(-20,22,64.51);
    glVertex3f(50,22,64.51);
    glVertex3f(50,22,61.51);
    glEnd();
    glBegin(GL_POLYGON);//ab
    glColor3ub(100, 147, 250);
    glVertex3f(-20,22,-61.51);
    glVertex3f(-20,22,-66.01);
    glVertex3f(50,22,-66.01);
    glVertex3f(50,22,-61.51);
    glEnd();
    glBegin(GL_POLYGON);//ak
    glColor3ub(100, 147, 250);
    glVertex3f(49,22,-62.51);
    glVertex3f(49,22,61.51);
    glVertex3f(52,22,61.51);
    glVertex3f(52,22,-62.51);
    glEnd();
    glBegin(GL_POLYGON);//pinggird
    glColor3ub(100, 147, 250);
    glVertex3f(50,22,61.51);
    glVertex3f(50,22,64.51);
    glVertex3f(51.5,22,64);
    glVertex3f(52,22,62.51);
    glVertex3f(52,22,61.51);
    glEnd();
    glBegin(GL_POLYGON);//pinggird
    glColor3ub(100, 147, 250);
    glVertex3f(50,22,-62.51);
    glVertex3f(50,22,-66);
    glVertex3f(51.5,22,-65.51);
    glVertex3f(52,22,-63.51);
    glVertex3f(52,22,-62.51);
    glEnd();
}

void baleho(void)//alen
{
    glBegin(GL_POLYGON);
    glColor3ub(255, 18, 18);
    glVertex3f(-40,0,40);
    glVertex3f(-40,15,40);
    glVertex3f(-20,15,40);
    glVertex3f(-20, 0,40);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-40,0,40);
    glVertex3f(-40,15,40);
    glVertex3f(-40,15,38);
    glVertex3f(-40, 0,38);
    glEnd();
     glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-20,0,40);
    glVertex3f(-20,15,40);
    glVertex3f(-20,15,38);
    glVertex3f(-20, 0,38);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-40,0,38);
    glVertex3f(-40,15,38);
    glVertex3f(-20,15,38);
    glVertex3f(-20, 0,38);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-40,0,40);
    glVertex3f(-40,0,38);
    glVertex3f(-20,0,38);
    glVertex3f(-20, 0,40);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-40,0,38);
    glVertex3f(-40,0,40);
    glVertex3f(-20,0,40);
    glVertex3f(-20, 0,38);
    glEnd();


    glBegin(GL_POLYGON);
    glColor3ub(0, 0, 0);
    glVertex3f(-31,0,39.5);
    glVertex3f(-31,-10,39.5);
    glVertex3f(-29,-10,39.5);
    glVertex3f(-29, 0,39.5);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(0, 0, 0);
    glVertex3f(-31,0,38.5);
    glVertex3f(-31,-10,38.5);
    glVertex3f(-29,-10,38.5);
    glVertex3f(-29, 0,38.5);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(0, 0, 0);
    glVertex3f(-31,0,39.5);
    glVertex3f(-31,-10,39.5);
    glVertex3f(-31,-10,38.5);
    glVertex3f(-31, 0,38.5);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(0, 0, 0);
    glVertex3f(-29,0,39.5);
    glVertex3f(-29,-10,39.5);
    glVertex3f(-29,-10,38.5);
    glVertex3f(-29  , 0,38.5);
    glEnd();

    glPushMatrix();//bola
    glColor3ub(255, 0, 0);
    glTranslatef(0, -9.5, 0);
    glutSolidSphere(0.5, 30, 16);
    glPopMatrix();
    glEnd();


    //tv
    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-30,5,-40);
    glVertex3f(-30,0,-40);
    glVertex3f(-20,0,-40);
    glVertex3f(-20, 5,-40);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-30,5,-40);
    glVertex3f(-30,0,-40);
    glVertex3f(-30,0,-38);
    glVertex3f(-30, 5,-38);
    glEnd();
     glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-20,5,-40);
    glVertex3f(-20,0,-40);
    glVertex3f(-20,0,-38);
    glVertex3f(-20, 5,-38);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(128, 110, 110);
    glVertex3f(-30,5,-38);
    glVertex3f(-30,0,-38);
    glVertex3f(-20,0,-38);
    glVertex3f(-20, 5,-38);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-30,5,-40);
    glVertex3f(-30,5,-38);
    glVertex3f(-20,5,-38);
    glVertex3f(-20,5,-40);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(255, 255, 255);
    glVertex3f(-30,5,-38);
    glVertex3f(-30,5,-40);
    glVertex3f(-20,5,-40);
    glVertex3f(-20, 5,-38);
    glEnd();
    //tiang TV
    glLineWidth(3.0f);
    glBegin(GL_LINE_STRIP);
    glColor3ub(255, 255, 255);
    glVertex3f(-29.5,4.9,-40);
    glVertex3f(-29.5,-9.9,-40);
    glVertex3f(-20.5,-9.9,-40);
    glVertex3f(-20.5,4.9,-40);
    glEnd();
}

void tampil(void)
{
    glPushMatrix();
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    gluLookAt(0.0f, 0.0f, 3.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f);
    glRotatef(xrot, 0, 1, 0);
    glRotatef(yrot, 1, 0, 0);
    lapangan();
    tribunbelakang();tribundepan();tribunkanan();tribunkiri();
    dlapangan();
    dtribun();
    baleho();
    glPopMatrix();
    glutSwapBuffers();
} 
void keyboard(unsigned char key, int x, int y)
{
    switch (key)
    {
    case 'w':
    case 'W':
        glTranslatef(0.0, 0.0, 3.0);
        break;
    case 'd':
    case 'D':
        glTranslatef(-3.0, 0.0, 0.0);
        break;
	case 's':
    case 'S':
        glTranslatef(0.0, 0.0, -3.0);
        break;
    case 'a':
    case 'A':
        glTranslatef(3.0, 0.0, 0.0);
        break;

	case '7':
        glTranslatef(0.0, 3.0, 0.0);
        break;
	case '9':
        glTranslatef(0.0, -3.0, 0.0);
        break;
    case '2':
        glRotatef(2.0, 1.0, 0.0, 0.0);
        break;
    case '8':
        glRotatef(-2.0, 1.0, 0.0, 0.0);
        break;
    case '6'://putar kanan
        glRotatef(2.0, 0.0, 1.0, 0.0);
        break;
    case '4'://putar kiri
        glRotatef(-2.0, 0.0, 1.0, 0.0);
        break;
    case '1':
        glRotatef(2.0, 0.0, 0.0, 1.0);
        break;
    case '3':
        glRotatef(-2.0, 0.0, 0.0, 1.0);
        break;
    case '5':
        if (is_depth)
        {
            is_depth = 0;
            glDisable(GL_DEPTH_TEST);
        }
        else
        {
            is_depth = 1;
            glEnable(GL_DEPTH_TEST);
        }
    }
    tampil();

}

void mouse(int button, int state, int x, int y)
{
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
    {
        mouseDown = true;
        xdiff = xrot = x;
        ydiff = yrot = y;
    }
    else {
        mouseDown = false;
    }
}

void mouseMotion(int x, int y)
{
    if (mouseDown)
    {
        xrot = x;
        yrot = y;

        glutPostRedisplay();
    }
}

void ukuran(int lebar, int tinggi)
{
    if (tinggi == 0) tinggi = 1;

    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(90.0, lebar / tinggi, 5.0, 500.0);
    glTranslatef(0.0, -5.0, -150.0);
    glMatrixMode(GL_MODELVIEW);
}
